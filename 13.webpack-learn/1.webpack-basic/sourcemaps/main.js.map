{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA;AACA;AACA;AAEA;AACA;CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sources":["webpack:///./src/less.less?a7e8","webpack:///./src/sass.scss?2e14","webpack:///./src/index.css?e1b3","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// let name = require('./name.txt');\r\n// console.log(name.default);\r\n// console.log('开发服务器不生成实际文件中的吗？')\r\n\r\nimport './index.css';\r\nimport './less.less';\r\nimport './sass.scss';\r\n\r\n// let logo = require('../static/cyt.jpg');\r\n// let img = new Image();\r\n// // img.src = logo.default;\r\n// img.src = logo; // esModule: false\r\n// document.body.appendChild(img);\r\n\r\n// function readonly(target, key, descriptor) {\r\n//     descriptor.writable = false;\r\n// }\r\n// class Circle {\r\n//     @readonly PI = 3.14; // 在jsconfig.json中启用装饰器的支持，不然此处会报错\r\n// }\r\n// let c1 = new Circle();\r\n// c1.PI = 3.15;\r\n// console.log(c1);\r\n\r\n// 打包第三方类库，直接引入\r\n// import _ from 'lodash';\r\n\r\n// 入口模块内引入一次lodash，可以采用行内loader的方式，如下：\r\n// require('expose-loader?exposes=_zj!lodash'); // _提示已经定义在了global上，不知道怎么处理；exposes=其他值就ok了\r\n// console.log(_.join(['a', 'b', 'c'], '@'));\r\n// console.log(window._);\r\n// 假如，我们的模块很多，且都需要引入lodash模块，就会很麻烦，可以使用ProvidePlugin插件自动添加\r\n\r\n// import jQuery from 'jquery';\r\n// console.log(jQuery);\r\n\r\n// fetch('/api/users').then((res) => res.json()).then(data => console.log(data));\r\n"],"names":[],"sourceRoot":""}